!(function () {
  var t = function (t) {
    (this.element = t),
      (this.list = this.element.getElementsByTagName("ul")[0]),
      (this.cards = this.list.children),
      (this.reverseDirection = this.element.classList.contains(
        "anim-cards-reverse"
      )),
      (this.translate = 0),
      (this.animationId = !1),
      (this.animating = !1),
      (this.paused = !1),
      (this.animationSpeed = 1),
      (function (e) {
        new IntersectionObserver(
          function (t) {
            t[0].isIntersecting
              ? ((this.animating = !0), this.paused || a(this))
              : ((this.animating = !1), o(this));
          }.bind(e)
        ).observe(e.element),
          e.element.addEventListener("update-card-width", function (t) {
            e.animating && (o(e), e.paused || a(e));
          }),
          e.element.addEventListener("anim-cards", function (t) {
            i(e);
          }),
          e.element.addEventListener("pause-cards", function (t) {
            n(e);
          });
        var t = e.element.getAttribute("data-anim-cards-pause-hover");
        t &&
          "on" == t &&
          (e.element.addEventListener("mouseenter", function () {
            n(e);
          }),
          e.element.addEventListener("mouseleave", function () {
            i(e);
          }));
      })(this);
  };
  function a(t) {
    var e;
    t.paused ||
      ((t.cardWidth =
        ((e = t),
        parseFloat(window.getComputedStyle(e.cards[0]).marginRight) +
          e.cards[0].offsetWidth)),
      (t.animationId = window.requestAnimationFrame(
        function t(e) {
          o(this);
          this.timestamp || (this.timestamp = e);
          var n = 0.06 * (this.timestamp - e) * this.animationSpeed;
          this.timestamp = e;
          s(this, n);
          r(this);
          d(this);
          this.animationId = window.requestAnimationFrame(t.bind(this));
        }.bind(t)
      )));
  }
  function s(t, e) {
    (t.translate = t.reverseDirection ? t.translate - e : t.translate + e),
      (t.translate = Math.round(100 * Math.abs(t.translate)) / 100),
      t.reverseDirection || (t.translate = -1 * t.translate);
  }
  function r(t) {
    if (!(Math.abs(t.translate) <= t.cardWidth)) {
      (t.translate = Math.abs(t.translate) - t.cardWidth),
        t.reverseDirection || (t.translate = -1 * t.translate);
      var e = t.cards[0].cloneNode(!0);
      t.list.removeChild(t.cards[0]), t.list.appendChild(e);
    }
  }
  function d(t) {
    (t.list.style.transform = "translateX(" + t.translate + "px)"),
      (t.list.style.msTransform = "translateX(" + t.translate + "px)");
  }
  function o(t) {
    t.animationId &&
      (window.cancelAnimationFrame(t.animationId), (t.animationId = !1));
  }
  function e(a) {
    var t = document.getElementById(a.getAttribute("aria-controls"));
    if (t) {
      var s = t.getElementsByClassName("js-anim-cards");
      s.length < 1 ||
        a.addEventListener("click", function (t) {
          var e = "true" == a.getAttribute("aria-pressed"),
            n = e ? "anim-cards" : "pause-cards";
          e
            ? a.setAttribute("aria-pressed", "false")
            : a.setAttribute("aria-pressed", "true");
          for (var i = 0; i < s.length; i++)
            s[i].dispatchEvent(new CustomEvent(n));
        });
    }
  }
  var m,
    c = document.getElementsByClassName("js-anim-cards"),
    l = window.requestAnimationFrame,
    h = window.matchMedia("(prefers-reduced-motion: reduce)").matches,
    u =
      "IntersectionObserver" in window &&
      "IntersectionObserverEntry" in window &&
      "intersectionRatio" in window.IntersectionObserverEntry.prototype;
  if (0 < c.length) {
    for (var f = [], v = 0; v < c.length; v++)
      l && !h && u
        ? ((m = v), f.push(new t(c[m])))
        : c[v].classList.add("anim-cards--anim-off");
    if (0 < f.length) {
      var p = !1,
        g = new CustomEvent("update-card-width");
      function w() {
        for (var t = 0; t < f.length; t++) f[t].element.dispatchEvent(g);
      }
      window.addEventListener("resize", function () {
        clearTimeout(p), (p = setTimeout(w, 500));
      });
    }
    var E = document.getElementsByClassName("js-anim-cards-control");
    if (0 < E.length)
      for (v = 0; v < E.length; v++)
        l && !h && u ? e(E[v]) : E[v].classList.add("hide");
  }
})();
